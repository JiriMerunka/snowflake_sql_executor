{%- assign is_deleted_field = {{is_deleted_field}} | default: "_sys_is_deleted" -%}
{%- assign _sys_valid_from = {{_sys_valid_from}} | default: "_sys_valid_from" -%}
{%- assign _sys_valid_to = {{_sys_valid_to}} | default: "_sys_valid_to" -%}
{%- assign _sys_is_current = {{_sys_is_current}} | default: "_sys_is_current" -%}
{%- assign hash_field = {{hash_field}} | default: "_sys_hash" -%}
{%- assign updated_at_field = {{updated_at_field}} | default: "_sys_updated_at" -%}


{%- assign transaction_date = {{transaction_date}} | default: "current_timestamp" -%}
{%- assign track_ind = {{track_ind}} | default: "track_ind" -%}
{%- assign new_ind = {{new_ind}} | default: "new_ind" -%}


{%- comment -%}
{%- endcomment -%}
{%- assign all_fields = keys | concat: fields -%}
{%- assign all_fields = {{all_fields|uniq}} -%}
{%- comment -%}
{%- endcomment -%}
{%- assign consolidate_without_sys_hash = {{consolidate_without_sys_hash}} | default: "false" %}
{%- assign historization_type = {{historization_type}} | default: "scd_1" -%}
{%- assign wrk_tgt_table_name = "wrk_" | append: tgt_table_name -%}
{%- assign wrk_tgt_table_name_diff = wrk_tgt_table_name | append: "_diff" -%}

{%- assign ee = "=" -%}

{%- if consolidate_without_sys_hash == 'false' -%}
{%- assign consolidate_keys = keys -%}
{%- else -%}
{%- assign consolidate_keys = all_fields -%}
{%- assign ee = "<=>" %}
{%- endif -%}

{% capture newLine %}
{% endcapture %}


DROP TABLE IF EXISTS {{tgt_table_name}};
CREATE LOCAL TEMP TABLE {{tgt_table_name}}
AS
(
    SELECT {% for all_field in all_fields %}{{ all_field['name'] | upcase}}{% unless forloop.last %}, {% endunless %}{% endfor %}, 
            min(date_from)::TIMESTAMP AS _sys_valid_from
            {{ newLine }}
            {%- if src_table_type == 'transaction_table' -%}       
        ,CASE WHEN LEAD(max(date_to)) OVER (PARTITION BY {% for key in keys %}"{{ key['name'] | upcase}}"{% unless forloop.last %},{% endunless %}{% endfor %} ORDER BY min(date_from)) IS NULL THEN CASE WHEN max(date_to) >= DATE_TRUNC('DAY',CONVERT_TIMEZONE('UTC', CURRENT_TIMESTAMP))::DATE THEN '3000-01-01' ELSE max(date_to) END ELSE max(date_to) END - INTERVAL '1 second' AS _sys_valid_to
            {%- else -%}
        ,CASE WHEN LEAD(max(date_to)) OVER (PARTITION BY {% for key in keys %}"{{ key['name'] | upcase}}"{% unless forloop.last %},{% endunless %}{% endfor %} ORDER BY min(date_from)) IS NULL THEN CASE WHEN max(date_to) = DATE_TRUNC('DAY',CONVERT_TIMEZONE('UTC', CURRENT_TIMESTAMP))::DATE + 1 THEN '3000-01-01' ELSE max(date_to) END ELSE max(date_to) END - INTERVAL '1 second' AS _sys_valid_to
            {% endif -%}
            {{ newLine }}
    FROM 
    (
        SELECT B.*,
                SUM(CASE WHEN prev_date_to > dateadd(day, -1, date_from)
                        THEN 0 ELSE 1
                    END) OVER (PARTITION BY {% for key in keys %}"{{ key['name'] | upcase}}"{% unless forloop.last %},{% endunless %}{% endfor %} ORDER BY date_from ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) as grp
        FROM    
        (
            SELECT A.*,
                lag(date_to) OVER (PARTITION BY {% for all_field in all_fields %}{{ all_field['name'] | upcase}}{% unless forloop.last %}, {% endunless %}{% endfor %} ORDER BY date_from ) as prev_date_to
            FROM             
            (
                SELECT  
                        {{date_field}} AS date_from
                        ,DATEADD(day,1,{{date_field}}) AS date_to
                        ,{% for key in keys %}"{{ key['name'] | upcase}}"{% unless forloop.last %} 
                        ,{% endunless %}{% endfor %}
                        {% if {(fields.first)} %},{% for field in fields %} 
                        
                        {%- if src_table_type == 'transaction_table' -%}  
                        FIRST_VALUE(NULLIF("{{ field['name'] | upcase}}",{% if field.type == 'INTEGER'-%} NULL {% elsif field.type == 'TIMESTAMP'-%} NULL {% elsif field.type == 'BOOLEAN'-%} NULL {% elsif field.type contains 'NUMERIC'-%} NULL {%- else -%} '' {%- endif -%}) IGNORE NULLS) OVER ( PARTITION BY {% for key in keys %}"{{ key['name'] | upcase}}"{% unless forloop.last %} ,{% endunless %} {% endfor %} ORDER BY {{date_field}} DESC,"{{ field['name'] | upcase}}" ASC ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING) AS "{{ field['name'] | upcase}}"  
                        {%- else -%}
                        "{{ field['name'] | upcase}}"                   
                        {%- endif -%}

                        {% unless forloop.last %} ,{% endunless %}{% endfor %} -- do not allow change from value to NULL, NULLIF to handle '' values t
                        
                        {%- endif -%}
                        {{ newLine }}

                FROM {{ src_table_name }}
            ) A
        ) B
    ) C
    GROUP BY {% for all_field in all_fields %}{{ all_field['name'] | upcase}}{% unless forloop.last %}, {% endunless %}{% endfor %}, grp
)
;
